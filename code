4.Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, 
return the index where it would be if it were inserted in order.
Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:
Input: nums = [1,3,5,6], target = 2
Output: 1
Example 3:
Input: nums = [1,3,5,6], target = 7
Output:
  
  
  
  package zohotest;

public class distinctInteger {

		    public static int searchInsert(int[] nums, int target) {
		      
		        int start = 0, end = nums.length - 1;

		         while (start <= end) {
		         int mid = start + (end - start) / 2;
		         if(nums[mid] == target) {
		                return mid;
		            }
		         if (target < nums[mid]) {
		                end = mid - 1;
		            } 
		               else {
		                start = mid + 1;
		            }
		        }
		        return start;
		    }

		    public static void main(String[] args) {
		        
		        int[] nums1 = {1, 3, 5, 6};
		        int target1 = 5;
		        System.out.println("Output: " + searchInsert(nums1, target1)); 

		       
		        int[] nums2 = {1, 3, 5, 6};
		        int target2 = 2;
		        System.out.println("Output: " + searchInsert(nums2, target2)); 

		       
		        int[] nums3 = {1, 3, 5, 6};
		        int target3 = 7;
		        System.out.println("Output: " + searchInsert(nums3, target3)); 
		    }
		


	}



  
